@page
@model Mindlift.Pages.Libraries.IndexModel

@{
    ViewData["Title"] = "Top 3 Books";
}

<!-- Page Title -->
<h1 class="text-center my-4" style="font-family: 'Arial', sans-serif; color: #333; font-weight: bold;">
    @if (!string.IsNullOrWhiteSpace(Request.Query["searchQuery"]))
    {
        <span>Results for "@Request.Query["searchQuery"]"</span>
    }
    else
    {
        <span>Top Books</span>
    }
</h1>

<!-- Search Form -->
<div class="container mb-4">
    <form method="get" class="d-flex justify-content-center">
        <div class="input-group w-75">
            <input type="text" id="searchQuery" name="searchQuery" class="form-control" placeholder="Enter a book title, author, etc." value="@Request.Query["searchQuery"]" />
            <button type="submit" class="btn btn-primary"><i class="fas fa-search"></i> Search</button>
        </div>
    </form>
</div>

<!-- Book Cards Layout -->
<div class="container">
    @if (Model.ExternalBooks != null && Model.ExternalBooks.Any())
    {
        <div class="row mt-3">
            @foreach (var book in Model.ExternalBooks)
            {
                <div class="col-lg-4 col-md-6 mb-4">
                    <div class="card shadow-lg border-light rounded h-100">
                        <!-- Book Cover -->
                        <div class="card-img-top" style="height: 250px; background-color: #f4f4f4; display: flex; justify-content: center; align-items: center;">
                            @if (!string.IsNullOrEmpty(book.ISBN))
                            {
                                <img src="https://covers.openlibrary.org/b/isbn/@book.ISBN-L.jpg" alt="Book Cover" style="max-height: 100%; max-width: 100%; object-fit: contain;" />
                            }
                            else
                            {
                                <span class="text-muted">No cover available</span>
                            }
                        </div>
                        <div class="card-body">
                            <h5 class="card-title" style="font-size: 1.2rem; color: #333; font-weight: bold; text-overflow: ellipsis; white-space: nowrap; overflow: hidden;">@book.Title</h5>
                            <p class="card-text text-muted" style="font-size: 1rem;">@book.Author ?? "Unknown Author"</p>
                            <p class="text-small" style="font-size: 0.9rem; color: #777;">
                              <strong>Rating:</strong>
                              @if (book.RatingsAverage.HasValue)
                              {
                                   var roundedRating = (int)Math.Round(book.RatingsAverage.Value);
                                   for (int i = 0; i < roundedRating; i++)
                                   {
                                       <i class="fas fa-star" style="color: #f39c12;"></i>
                                   }
                                   for (int i = roundedRating; i < 5; i++)
                                   {
                                       <i class="far fa-star" style="color: #f39c12;"></i>
                                   }
                                   <span class="ms-1">(@book.RatingsAverage.Value.ToString("N1"))</span>
                               }
                               else
                               {
                                   <span>No ratings</span>
                               }
                        </p>

                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-info mt-4 text-center" role="alert">
            No books found. Try a different search.
        </div>
    }
</div>

<!-- Add necessary scripts for icons -->
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
